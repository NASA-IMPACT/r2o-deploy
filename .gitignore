# macOS
.DS_Store

# values
local-setup/argocd/argocd-conf/values.yaml
local-setup/argocd/argocd-conf/argocd-github-app.yaml

# ArgoCD credentials 
argocd-login.txt

# Sensitive envs
.env
# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Ignore transient lock info files created by terraform apply
.terraform.tfstate.lock.info

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc

terraform.rc

*.py[co]
*.DS_Store

# Packages
*.egg
*.egg-info
dist
build
eggs
parts
var
sdist
develop-eggs
.installed.cfg

# Installer logs
pip-log.txt

# Unit test / coverage reports
.coverage
.tox
coverage.xml
nosetests.xml

#Translations
*.mo

#Mr Developer
.mr.developer.cfg

# Emacs backup files
*~

# Eclipse IDE
/.project
/.pydevproject

# IDEA IDE
.idea*
src/


# Virtualenvs
.venv
venv
env
env2
env3

# CLI docs generation
doc/source/aws_man_pages.json
doc/source/reference
doc/source/topic
doc/source/tutorial/services.rst

# Pyenv
.python-version
